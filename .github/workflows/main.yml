name: Main

on:
  pull_request:

  push:
    branches:
      - dev
      - main

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: "ubuntu-latest"
    
    env:
      CI: true

    services:
      - name: postgres
        alias: postgres
      - name: hasura/graphql-engine:v2.40.0
        alias: graphql-engine # this is the hostname where the service can be accessed

    variables:
      FF_NETWORK_PER_BUILD: 1 # see https://docs.gitlab.com/ee/ci/services/#connecting-services
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB
      PG_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB
      HASURA_GRAPHQL_ENDPOINT: http://graphql-engine:8080

    script:
      - apt update && apt upgrade --yes
      - apt install curl --yes
      - curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash

      # Apply the migrations to the fresh DB
      - cd hasura
      - hasura metadata apply # at this point, the metadata will be inconsistent, since migrations have not been applied yet
      - hasura migrate apply --database-name $HASURA_DATABASE_NAME
      - hasura migrate status --database-name $HASURA_DATABASE_NAME
      - hasura seeds apply --database-name $HASURA_DATABASE_NAME
      - hasura metadata reload # hasura will check again and metadata should now be consistent with database information.
      - |
      output=$(hasura metadata inconsistency status 2>&1)
      if [[ ! $output =~ "metadata is consistent" ]]; then
        hasura metadata ic list
        exit 1
      fi
    rules:
      # Automatically run on any merge request that updates the hasura directory
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          - hasura/migrations/**/*
          - hasura/metadata/**/*
          - hasura/seeds/**/*
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
          when: manual # If the hasura files haven't changed allow the user to choose to manually run it
          allow_failure: true # the pipeline continues running even if the manual job is not run

    steps:
        - name: checkout
          uses: actions/checkout@v4

        - uses: actions/setup-node@v4
          with:
            node-version: 22.1.0

        - name: build my-app
          working-directory: my-app
          run: npm ci && npm run build --if-present

        - name: run tests
          working-directory: my-app
          run: npx cypress run
          